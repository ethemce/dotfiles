# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# don't put duplicate lines in the history. See bash(1) for more options
# ... or force ignoredups and ignorespace
HISTCONTROL=ignoredups:ignorespace

# append to the history file, don't overwrite it
shopt -s histappend

# When displaying prompt, write previous command to history file so that,
# any new shell immediately gets the history lines from all previous shells.
PROMPT_COMMAND='history -a'

# Set history file length.(See HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

force_color_prompt=yes

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias dir='dir --color=auto'
    alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# some more ls aliases
alias ll='ls -lhFA'
alias la='ls -AF'
alias l='ls -CF'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi

export EDITOR=vim

MASUS_DEFAULT_COLOR="[00m"
MASUS_GRAY_COLOR="[37m"
MASUS_PINK_COLOR="[35m"
MASUS_GREEN_COLOR="[32m"
MASUS_ORANGE_COLOR="[33m"
MASUS_RED_COLOR="[31m"
if [ `id -u` == '0' ]; then
  MASUS_USER_COLOR=$MASUS_RED_COLOR
else
  MASUS_USER_COLOR=$MASUS_PINK_COLOR
fi

MASUS_VC_PROMPT=$' on \033[32m%n:%b \033[00m%m'

masus_vcprompt() {
  path=`pwd`
  prompt="$MASUS_VC_PROMPT"
  ~/bin/vcprompt -f "$prompt"
}

masus_lastcommandfailed() {
  code=$?
  if [ $code != 0 ]; then
    echo -n $'\033[37m exited \033[31m'
    echo -n $code
    echo -n $'\033[37m'
  fi
}

masus_backgroundjobs() {
  jobs|python -c 'if 1:
    import sys
    items = ["\033[36m%s\033[37m" % x.split()[2]
             for x in sys.stdin.read().splitlines()]
    if items:
      if len(items) > 2:
        string = "%s, and %s" % (", ".join(items[:-1]), items[-1])
      else:
        string = ", ".join(items)
      print("\033[37m running %s" % string)
  '
}

masus_virtualenv() {
  if [ x$VIRTUAL_ENV != x ]; then
    if [[ $VIRTUAL_ENV == *.virtualenvs/* ]]; then
      ENV_NAME=`basename "${VIRTUAL_ENV}"`
    else
      folder=`dirname "${VIRTUAL_ENV}"`
      ENV_NAME=`basename "$folder"`
    fi
    echo -n $' \033[37mworkon \033[31m'
    echo -n $ENV_NAME
    echo -n $'\033[00m'
  fi
}

export MASUS_BASEPROMPT='\n\e${MASUS_USER_COLOR}\u \
\e${MASUS_GRAY_COLOR}at \e${MASUS_ORANGE_COLOR}\h \
\e${MASUS_GRAY_COLOR}in \e${MASUS_GREEN_COLOR}\w\
`masus_lastcommandfailed`\
\e${MASUS_GRAY_COLOR}`masus_vcprompt`\
`masus_backgroundjobs`\
`masus_virtualenv`\
\e${MASUS_DEFAULT_COLOR}'
export PS1="\[\033[G\]${MASUS_BASEPROMPT}
$ "

export TERM=xterm-color
export GREP_OPTIONS='--color=auto' GREP_COLOR='1;32'
export CLICOLOR=1
export LSCOLORS=ExGxFxDxCxHxHxCbCeEbEb
export LC_CTYPE=en_US.utf-8
export PATH=~/bin:/usr/local/bin:/home/mn/Labs/go/bin:$PATH
export IGNOREEOF=1
export PYTHONDONTWRITEBYTECODE=1
export LESS=FRSX

# virtualenvwrapper and pip
if [ -f /usr/local/bin/virtualenvwrapper.sh ]; then
	if [ `id -u` != '0' ]; then
	  export VIRTUALENV_USE_DISTRIBUTE=1
	  export WORKON_HOME=$HOME/.virtualenvs
	  source /usr/local/bin/virtualenvwrapper.sh
	  export PIP_VIRTUALENV_BASE=$WORKON_HOME
	  export PIP_RESPECT_VIRTUALENV=true
	fi
fi

# pip bash completion start
_pip_completion()
{
    COMPREPLY=( $( COMP_WORDS="${COMP_WORDS[*]}" \
                   COMP_CWORD=$COMP_CWORD \
                   PIP_AUTO_COMPLETE=1 $1 ) )
}
complete -o default -F _pip_completion pip
# pip bash completion end
